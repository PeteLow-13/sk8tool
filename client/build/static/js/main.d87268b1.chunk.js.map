{"version":3,"sources":["logo.svg","components/Footer/index.js","components/Navbuttons/index.js","components/Header/index.js","components/Display/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","react_default","a","createElement","className","href","target","Navbuttons","_React$createElement","id","class","type","placeholder","Object","defineProperty","Header","components_Navbuttons","Display","console","log","process","App","components_Header","components_Display","components_Footer","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mLCgBzBC,MAbf,WACI,OAEIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,kCACKF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,kCAAkCC,OAAO,SAAjD,gBAAyEL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+BAA+BC,OAAO,SAA9C,yBAA+EL,EAAAC,EAAAC,cAAA,KAAGE,KAAK,gCAAgCC,OAAO,SAA/C,wBCS1JC,MAhBf,WAAsB,IAAAC,EAClB,OAEIP,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aAAaC,MAAM,cACvBT,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaK,GAAG,aAAaE,KAAK,OAAOC,YAAY,eACtEX,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,GAAG,aAA/B,SACAR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,GAAG,aAA/B,SACAR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,GAAG,cAA/B,cACAR,EAAAC,EAAAC,cAAA,KAAGE,KAAK,aAAYJ,EAAAC,EAAAC,cAAA,UAAAK,EAAA,CAAQJ,UAAU,WAAlBS,OAAAC,EAAA,EAAAD,CAAAL,EAAA,YAAsC,YAAtCK,OAAAC,EAAA,EAAAD,CAAAL,EAAA,KAAoD,YAApDA,GAAA,aACpBP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,GAAG,eAA/B,aCCGM,MATf,WACI,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACa,EAAD,QCIGC,MATf,WAEI,OADAC,QAAQC,IAAIC,+CAERnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8CCcGkB,mLAVX,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,cANUC,aCEZC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1B1B,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB0B,MAAM,SAAAC,GACL5B,QAAQ4B,MAAM,4CAA6CA,KChEjEC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBjB,UAAW,CAGzE,GADkB,IAAIkB,IAAIhC,GAAwBQ,OAAOC,UAC3CwB,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAsB,OAAMnC,GAAN,sBAENM,EAwCX,SAAiCO,GAE/BuB,MAAMvB,GACHI,KAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3B,UAAUC,cAAc2B,MAAMzB,KAAK,SAAAC,GACjCA,EAAayB,aAAa1B,KAAK,WAC7BT,OAAOC,SAASmC,aAKpBhC,EAAgBC,KAGnBY,MAAM,WACL3B,QAAQC,IACN,mEAzDA8C,CAAwBhC,GAHxBD,EAAgBC,MC7BxBiC","file":"static/js/main.d87268b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","import React from 'react';\n// import './style.css';\n\nfunction Footer(){\n    return (\n        \n        <footer className='footer'>\n            <span>\n            <p>Â©Sk8Tool made by: </p>\n                 <a href='https://github.com/DanielYu0864' target='blank'>Daniel Yu,  </a><a href='https://github.com/tronciu92' target='blank'>Vasile Tronciu, and  </a><a href='https://github.com/PeteLow-13' target='blank'>Pete Low  </a>\n                </span>\n        </footer>\n        \n    );\n}\n\nexport default Footer;","import React from 'react'\n\nfunction Navbuttons() {\n    return (\n        \n        <div id='button-bar' class='button-bar'>\n            <input className='city-input' id='city-input' type=\"text\" placeholder='Enter city'/>\n            <button className='nav-btn' id=\"parks-btn\">Parks</button>\n            <button className='nav-btn' id=\"shops-btn\">Shops</button>\n            <button className='nav-btn' id=\"view-spots\">View-Spots</button>\n            <a href='/add-spot'><button className='nav-btn' className='home-btn' id=\"home-btn\">Add-Spot</button></a>\n            <button className='nav-btn' id=\"weather-btn\">Weather</button>\n\n        </div>\n    \n    )\n}\n\nexport default Navbuttons\n","import React from 'react'\nimport Navbuttons from '../Navbuttons'\n\nfunction Header() {\n    return (\n        <div>\n            <h1>Sk8tool</h1>\n            <Navbuttons />        \n        </div>\n    )\n}\n\nexport default Header\n\n\n","import React from 'react'\n\nfunction Display() {\n    console.log(process.env);\n    return (\n        <div>\n            <p>Heres where the display will go</p>\n        </div>\n    )\n}\n\nexport default Display\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Display from \"./components/Display\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Display />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}