{"version":3,"sources":["../../node_modules/env-cmd/dist sync","components/Container/index.js","components/Footer/index.js","utils/ThirdAPI.js","components/NavButtons/index.js","components/Header/index.js","components/ViewParks/index.js","components/ViewShops/index.js","components/ViewSpots/index.js","components/Weather/index.js","components/AddSpot/index.js","components/Display/index.js","App.js","registerServiceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Container","props","react_default","a","createElement","className","style","children","Footer","components_Container","href","target","ThirdAPI","getCityLocaltion","city","axios","get","concat","process","getCityWeather","latitude","longitude","getGoogleMapAPI","NavButtons","_ref","changeDisplay","handleInputChange","cityInput","checkInputNotEmpty","class","type","placeholder","value","onChange","onClick","Header","components_NavButtons","ViewParks","src","ViewShops","ViewSpots","Weather","_useState","useState","_useState2","Object","slicedToArray","weatherArr","setWeatherArr","useEffect","console","log","then","res","data","_res$data$coord","coord","lon","lat","daily","dailyWeather","catch","err","error","map","datas","key","dt","Math","floor","Date","temp","max","toFixed","min","humidity","weather","icon","AddSpot","spotName","setSpotName","_useState3","_useState4","spotCity","setSpotCity","_useState5","_useState6","crossStreets","setCrossStreets","_useState7","_useState8","asyncToGenerator","regenerator_default","mark","_callee","event","name","wrap","_context","prev","next","t0","abrupt","stop","_x","apply","this","arguments","for","data-security","Display","displayContain","setCity","contain","setContain","components_ViewParks","components_ViewShops","components_ViewSpots","components_AddSpot","components_Weather","App","setDisplayContain","setCityInput","components_Header","components_Display","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.75d4bebe.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 20;","import React from 'react';\nimport './style.css';\n\nfunction Container (props) {\n    return (\n        <div className='container' style={props.style}>{props.children}</div>\n    )\n}\n\nexport default Container","import React from 'react';\nimport Container from '../Container';\nimport './style.css';\n\nfunction Footer(){\n    return (\n        <Container>\n            <footer className='footer'>\n                <span>\n                 <p>©Sk8Tool made by: </p>\n                 <a href='https://github.com/DanielYu0864' target='blank'>Daniel Yu,  </a><a href='https://github.com/tronciu92' target='blank'>Vasile Tronciu, and  </a><a href='https://github.com/PeteLow-13' target='blank'>Pete Low  </a>\n                </span>\n            </footer>\n        </Container>\n        \n    );\n}\n\nexport default Footer;","import axios from 'axios';\nconst {REACT_APP_OPEN_WEATHER_APIKEY} = process.env;\nconst {REACT_APP_GOOGLE_MAP_APIKEY} = process.env;\nexport default {\n  getCityLocaltion: (city) => {\n    return axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${REACT_APP_OPEN_WEATHER_APIKEY}`)\n  },\n  getCityWeather: (latitude, longitude) => {\n    return axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${REACT_APP_OPEN_WEATHER_APIKEY}`)\n  },\n  getGoogleMapAPI: () => {\n    return `${REACT_APP_GOOGLE_MAP_APIKEY}`\n  }\n\n\n  // function getCityWeather(city) {\n//   $.ajax({\n//     method: 'GET',\n//     url: `https://api.openweathermap.org/data/2.5/weather?q=seattle&appid=e93223a6b1823d41860077c8e54b5206`\n//   }).then((response) => {\n//     const latitude = response.coord.lat;\n//     const longitude = response.coord.lon;\n\n//     $.ajax({\n//       method: 'GET',\n//       url: `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${openWeatherApiKey}`\n//     }).then((response) => {\n//       const forecastRow = $('#forecast-row');\n//       forecastRow.empty();\n\n//       for (let i = 0; i < 6; i++) {\n//         const fDate = new Date(response.daily[i].dt * 1000);\n//         const fTemp = (((response.daily[i].temp.max - 273.15) * (9 / 5) + 32).toFixed(0));\n//         const fLowTemp = (((response.daily[i].temp.min - 273.15) * (9 / 5) + 32).toFixed(0));\n//         const fHumidity = response.daily[i].humidity;\n//         const fIcon = response.daily[i].weather[0].icon;\n\n//         const data = document.createElement('td');\n\n//         const dateHeader = document.createElement('h3');\n//         dateHeader.innerHTML = fDate.toLocaleDateString();\n//         data.append(dateHeader);\n\n//         const icon = document.createElement('img');\n//         icon.setAttribute('src', `https://openweathermap.org/img/wn/${fIcon}@2x.png`);\n//         data.append(icon);\n\n//         const tempSpan = document.createElement('div');\n//         tempSpan.innerHTML = `High Temp: ${fTemp} °`;\n//         data.append(tempSpan);\n\n//         const lowTempSpan = document.createElement('div');\n//         lowTempSpan.innerHTML = `Low Temp: ${fLowTemp}°`;\n//         data.append(lowTempSpan);\n\n//         const humiditySpan = document.createElement('div');\n//         humiditySpan.innerHTML = `Humidity ${fHumidity}%`;\n//         data.append(humiditySpan);\n\n//         forecastRow.append(data);\n//       }\n//     }).fail(err => console.error(err));\n//   }).fail(err => console.error(err));\n}","import React, {useState, useEffect} from 'react';\nimport ThirdAPI from '../../utils/ThirdAPI';\nimport './style.css'\n\nfunction NavButtons({changeDisplay, handleInputChange, cityInput}) {\n\n    const checkInputNotEmpty = (e) => {\n        if(cityInput) {\n            changeDisplay(e);\n        }\n    }\n\n    return (\n\n        <div id='button-bar' class='button-bar'>\n            <input\n                className='city-input'\n                id='city-input'\n                type=\"text\"\n                placeholder='Enter city'\n                value={cityInput}\n                onChange={handleInputChange}\n            />\n            <button onClick={() => checkInputNotEmpty('parks')} className='nav-btn' id=\"parks-btn\">Parks</button>\n            <button onClick={() => checkInputNotEmpty('shops')} className='nav-btn' id=\"shops-btn\">Shops</button>\n            <button onClick={() => checkInputNotEmpty('spots')} className='nav-btn' id=\"view-spots\">View-Spots</button>\n            <button onClick={() => checkInputNotEmpty('add')} className='nav-btn' id=\"add-btn\">Add-Spot</button>\n            {/* <button onClick={() => checkInputNotEmpty('add')} className='nav-btn' className='home-btn' id=\"home-btn\">Add-Spot</button> */}\n            <button onClick={() => checkInputNotEmpty('weather')} className='nav-btn' id=\"weather-btn\">Weather</button>\n\n        </div>\n\n    )\n}\n\nexport default NavButtons\n","import React from 'react'\nimport Container from '../Container'\nimport NavButtons from '../NavButtons';\n\nfunction Header({changeDisplay, handleInputChange, cityInput}) {\n    return (\n        <div>\n            <Container>\n            <h1>Sk8tool</h1>\n            <NavButtons\n                changeDisplay={changeDisplay}\n                handleInputChange={handleInputChange}\n                cityInput={cityInput}\n            />\n            </Container>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Container from '../Container'\n\nfunction ViewParks({city}) {\n\n    return (\n        <div>\n            <Container>\n                <iframe\n                    src={`https://www.google.com/maps/embed/v1/search?q=record+skatepark+in+${city}&key=${process.env.REACT_APP_GOOGLE_MAP_APIKEY}`}\n                />\n            </Container>\n        </div>\n    )\n}\n\nexport default ViewParks\n","import React from 'react'\nimport Container from '../Container'\n\nfunction ViewShops({city}) {\n    return (\n        <div>\n            <iframe\n            src={`https://www.google.com/maps/embed/v1/search?q=record+skateshop+in+${city}&key=${process.env.REACT_APP_GOOGLE_MAP_APIKEY}`}\n            />\n        </div>\n    )\n}\n\nexport default ViewShops\n","import React from 'react'\nimport Container from '../Container'\n\nfunction ViewSpots() {\n    return (\n        <div>\n            <Container>Spots</Container>\n        </div>\n    )\n}\n\nexport default ViewSpots\n","import React, {useEffect, useState} from 'react'\nimport Container from '../Container'\nimport ThirdAPI from '../../utils/ThirdAPI';\n\nfunction Weather({city}) {\n    const [weatherArr, setWeatherArr] = useState([]);\n    const getWeatherInfo = (city) => {\n        ThirdAPI.getCityLocaltion('seattle')\n        .then(res => {\n            console.log(res.data)\n            const {lon, lat} = res.data.coord;\n            ThirdAPI.getCityWeather(lat, lon)\n                .then(res => {\n                    console.log(res.data.daily)\n                    let dailyWeather = res.data.daily;\n                    setWeatherArr(dailyWeather);\n                })\n                .catch(err => console.error(err));\n\n        })\n        .catch(err => console.error(err));\n    }\n    useEffect(() => {\n        console.log('weather: ', city)\n        getWeatherInfo(city);\n    }, [])\n    return (\n        <div>\n            <Container>\n                <h1>Weather</h1>\n                {\n                    weatherArr.map((datas) => (\n                        <div key={datas.dt}>\n                            <div>Date: {Math.floor(new Date(datas.dt)/1000.0)}</div>\n                            <div>Max Temp: {(((datas.temp.max - 273.15) * (9/5) + 32).toFixed(0))}</div>\n                            <div>Max Temp: {(((datas.temp.min - 273.15) * (9/5) + 32).toFixed(0))}</div>\n                            <div>Humidity: {datas.humidity}</div>\n                            <div><img src={`https://openweathermap.org/img/wn/${datas.weather[0].icon}@2x.png`}/></div>\n                        </div>\n                    ))\n                }\n            </Container>\n        </div>\n    )\n}\n\nexport default Weather\n","import { getEnvFile } from 'env-cmd/dist/get-env-vars';\nimport React,{ useEffect, useState } from 'react'\nimport Container from '../Container'\n\nfunction AddSpot() {\n    const [spotName, setSpotName] = useState('');\n    const [spotCity, setSpotCity] = useState('');\n    const [crossStreets, setCrossStreets] = useState('');\n    const [location, setLocation] = useState({});\n    const handleInputChange = async (event) => {\n        let name = event.target.name;\n        switch (name) {\n            case 'name':\n                setSpotName(event.target.value);\n            break;\n            case 'city':\n                setSpotCity(event.target.value);\n            break;\n            case 'streets':\n                setCrossStreets(event.target.value);\n            break;\n            default:\n            break;\n        }\n    }\n    return (\n        <div>\n            <Container>\n                <h2>Add a Spot</h2>\n                <p>Please use the form below to add your spot</p>\n                <form className=\"create-form\">\n                    <label>Name Your Spot:</label>\n                    <input\n                        class='spot-name'\n                        id='spot-name'\n                        placeholder='enter your spot name here'\n                        value={spotName}\n                        name='name'\n                        onChange={handleInputChange}\n                    />\n                    <label for='spot-description'>Describe Your Spot:</label>\n                    <textarea class='spot-description' id ='spot-description' placeholder='What is at your spot? Example: 3 stairs with hand rail, public plaza with manual pads and ledges'></textarea>\n                    <h3>Where Is Your Spot?</h3>\n                    <label for='spot-city'>What city is your spot in?</label>\n                    <input\n                        type='text'\n                        class='spot-city'\n                        id='spot-city'\n                        placeholder='Ex: Seattle'\n                        value={spotCity}\n                        name='city'\n                        onChange={handleInputChange}\n                    />\n                    <button type=\"button\" class='form-btn' id='use-current-location'>Use your current location</button>\n                    <div id=\"current-spot\"></div>\n                    <br/>\n                    <label for='cross-streets'>OR add the closest cross streets:</label>\n                    <input\n                        class='cross-streets'\n                        id='cross-streets'\n                        placeholder='Example: 9th and pine'\n                        value={crossStreets}\n                        name='streets'\n                        onChange={handleInputChange}\n                    />\n\n                    <div class='security' id='security'>\n                    <label for=\"security-switch\">Is there security at the spot?</label>\n                    <br/>\n                    <button class='form-btn' id='security-guards-yes' data-security='true'>Yes</button>\n                    <button class='form-btn' id='security-guards-no' data-security='false'>No</button>\n                    </div>\n                    <button type='submit' class='form-btn' id='submit-spot'>Sumbit Your Spot</button>\n\n                </form>\n            </Container>\n        </div>\n    )\n}\n\nexport default AddSpot\n","import React, { useState, useEffect } from 'react';\nimport ViewParks from '../ViewParks';\nimport ViewShops from '../ViewShops';\nimport ViewSpots from '../ViewSpots';\nimport Weather from '../Weather';\nimport AddSpot from '../AddSpot';\nimport Container from '../Container';\n\n\n\nfunction Display({cityInput, displayContain}) {\n    const [city, setCity] = useState('');\n    const [contain, setContain] = useState('');\n    useEffect(() => {\n        setContain(displayContain);\n        setCity(cityInput);\n    });\n    // console.log('display: ', city);\n    // console.log('display: ', contain);\n    switch(contain) {\n        case 'parks':\n            return (\n                <ViewParks\n                    city={city}\n                />\n            )\n        case 'shops':\n            return (\n                <ViewShops\n                    city={city}\n                />\n            )\n        case 'spots':\n            return (\n                <ViewSpots/>\n            )\n        case 'add':\n            return (\n                <AddSpot/>\n            )\n        case 'weather':\n            return (\n                <Weather\n                    city={city}\n                />\n            )\n        default:\n            return (\n                <div>\n                    <Container>\n                        <div id='current-time'></div>\n                        <div id='current-weather'></div>\n                        <h2>Welcome to Sk8Tool.</h2>\n                        <p>Use our tools to find Skateshops, Skateparks or access our list of user added Skatespots near and far. Enter a city to find out what's near you</p>\n                    </Container>\n                </div>\n            )\n    }\n\n}\n\nexport default Display\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Display from \"./components/Display\";\n\nfunction App() {\n  // console.log(process.env)\n  const [displayContain, setDisplayContain] = useState('');\n  const [cityInput, setCityInput] = useState('');\n\n  const handleInputChange = async (event) => {\n      await setCityInput(event.target.value);\n      console.log(cityInput)\n  }\n\n  const changeDisplay = (contain) => {\n    switch(contain) {\n      case 'parks':\n        setDisplayContain('parks');\n      break;\n      case 'shops':\n        setDisplayContain('shops');\n      break;\n      case 'spots':\n        setDisplayContain('spots');\n      break;\n      case 'add':\n        setDisplayContain('add');\n      break;\n      case 'weather':\n        setDisplayContain('weather');\n      break;\n      default:\n        setDisplayContain('');\n    }\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <Header\n        cityInput={cityInput}\n        changeDisplay={changeDisplay}\n        handleInputChange={handleInputChange}\n      />\n      <Display\n        cityInput={cityInput}\n        displayContain={displayContain}\n      />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}